{"version":3,"sources":["webpack:///./node_modules/@ecomplus/widget-product/src/index.js"],"names":["options","elId","$productBlock","document","getElementById","$dock","isSSR","Boolean","storefront","window","getScopedSlots","body","context","mounted","removeSpinner","$loading","remove","dataset","toRender","buyText","lowQuantityToWarn","maxVariationOptionsBtns","Vue","render","h","TheProduct","attrs","id","props","product","available","checkInStock","on","$emit","scopedSlots","Object","assign","buy","undefined","domProps","innerHTML","$mount"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEe,gEAACA,OAAO,GAAG,EAAX,EAAeC,IAAI,GAAG,SAAtB,KAAoC;AACjD,QAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,IAAxB,CAAtB;;AACA,MAAIC,aAAJ,EAAmB;AACjB,UAAMG,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAyB,GAAEH,IAAK,OAAhC,CAAd;AACA,UAAMK,KAAK,GAAGC,OAAO,CAACF,KAAD,CAArB;AACA,UAAM;AAAEG;AAAF,QAAiBC,MAAvB;AACA,QAAIC,cAAJ,EAAoBC,IAApB;;AACA,QAAIH,UAAJ,EAAgB;AACdE,oBAAc,GAAGF,UAAU,CAACE,cAA5B;AACAC,UAAI,GAAGH,UAAU,CAACI,OAAX,IAAsBJ,UAAU,CAACI,OAAX,CAAmBD,IAAhD;AACD;;AAED,QAAIE,OAAJ;;AACA,UAAMC,aAAa,GAAG,MAAM;AAC1B,YAAMC,QAAQ,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAjB;;AACA,UAAIW,QAAJ,EAAc;AACZA,gBAAQ,CAACC,MAAT;AACD;;AACD,aAAOd,aAAa,CAACe,OAAd,CAAsBC,QAA7B;AACD,KAND;;AAOA,QAAIZ,KAAJ,EAAW;AACTO,aAAO,GAAGC,aAAV;AACD;;AAED,UAAM;AACJK,aADI;AAEJC,uBAFI;AAGJC;AAHI,QAIFrB,OAJJ;AAMA,QAAIsB,2CAAJ,CAAQ;AACNC,YAAM,EAAEC,CAAC,IAAIA,CAAC,CAACC,kEAAD,EAAa;AACzBC,aAAK,EAAE;AACLC,YAAE,EAAEtB,KAAK,GAAG,IAAH,GAAUJ;AADd,SADkB;AAIzB2B,aAAK,EAAE,EACL,GAAG5B,OAAO,CAAC4B,KADN;AAELC,iBAAO,EAAEvB,KAAK,IAAIK,IAAT,IAAiBA,IAAI,CAACmB,SAAtB,IAAmCC,+DAAY,CAACpB,IAAD,CAA/C,GAAwDA,IAAxD,GAA+D,IAFnE;AAGLQ,iBAHK;AAILC,2BAJK;AAKLC,iCALK;AAMLf;AANK,SAJkB;AAYzB0B,UAAE,EAAE;AACF,2BAAkBH,OAAlB,EAA2B;AACzB,gBAAI,CAACvB,KAAL,EAAY;AACVQ,2BAAa;AACd;;AACD,gBAAId,OAAO,CAACiC,KAAZ,EAAmB;AACjBjC,qBAAO,CAACiC,KAAR,CAAc,gBAAd,EAAgCJ,OAAhC;AACD;AACF;;AARC,SAZqB;AAuBzBK,mBAAW,EAAEC,MAAM,CAACC,MAAP,CACX;AACEC,aAAG,EAAE,CAACrC,OAAO,CAACqC,GAAT,GACDC,SADC,GAED,YAAY;AACZ,mBAAOd,CAAC,CAAC,MAAD,EAAS;AACfe,sBAAQ,EAAE;AACRC,yBAAS,EAAExC,OAAO,CAACqC;AADX;AADK,aAAT,CAAR;AAKD;AATL,SADW,EAYX,OAAO3B,cAAP,KAA0B,UAA1B,GACIA,cAAc,CAACR,aAAD,EAAgBsB,CAAhB,EAAmB,CAACnB,KAApB,CADlB,GAEI,EAdO;AAvBY,OAAb,CADR;AAyCNQ;AAzCM,KAAR,EA0CG4B,MA1CH,CA0CUpC,KAAK,IAAIH,aA1CnB;AA2CD;AACF,CA1ED,E","file":"chunk.aae59c8aa4b3092983f1.js","sourcesContent":["/*!\n * @ecomplus/widget-product\n * (c) E-Com Club <ti@e-com.club>\n * Released under the MIT License.\n */\n\nimport Vue from 'vue'\nimport { inStock as checkInStock } from '@ecomplus/utils'\nimport TheProduct from '#components/TheProduct.vue'\n\nexport default (options = {}, elId = 'product') => {\n  const $productBlock = document.getElementById(elId)\n  if ($productBlock) {\n    const $dock = document.getElementById(`${elId}-dock`)\n    const isSSR = Boolean($dock)\n    const { storefront } = window\n    let getScopedSlots, body\n    if (storefront) {\n      getScopedSlots = storefront.getScopedSlots\n      body = storefront.context && storefront.context.body\n    }\n\n    let mounted\n    const removeSpinner = () => {\n      const $loading = document.getElementById('product-loading')\n      if ($loading) {\n        $loading.remove()\n      }\n      delete $productBlock.dataset.toRender\n    }\n    if (isSSR) {\n      mounted = removeSpinner\n    }\n\n    const {\n      buyText,\n      lowQuantityToWarn,\n      maxVariationOptionsBtns\n    } = options\n\n    new Vue({\n      render: h => h(TheProduct, {\n        attrs: {\n          id: $dock ? null : elId\n        },\n        props: {\n          ...options.props,\n          product: isSSR && body && body.available && checkInStock(body) ? body : null,\n          buyText,\n          lowQuantityToWarn,\n          maxVariationOptionsBtns,\n          isSSR\n        },\n        on: {\n          'update:product' (product) {\n            if (!isSSR) {\n              removeSpinner()\n            }\n            if (options.$emit) {\n              options.$emit('update:product', product)\n            }\n          }\n        },\n\n        scopedSlots: Object.assign(\n          {\n            buy: !options.buy\n              ? undefined\n              : function () {\n                return h('span', {\n                  domProps: {\n                    innerHTML: options.buy\n                  }\n                })\n              }\n          },\n          typeof getScopedSlots === 'function'\n            ? getScopedSlots($productBlock, h, !$dock)\n            : {}\n        )\n      }),\n      mounted\n    }).$mount($dock || $productBlock)\n  }\n}\n"],"sourceRoot":""}