{"version":3,"sources":["webpack:///./node_modules/@ecomplus/widget-gmc-ratings/src/index.js"],"names":["options","gmcMerchantId","dialogPosition","router","window","storefrontApp","addConfirmationDialog","name","params","json","addDays","days","date","Date","now","setDate","getDate","order","customerEmail","deliveryCountry","deliveryDate","orderJson","decodeURIComponent","JSON","parse","e","buyers","main_email","shippingLine","shipping_lines","delivery_time","posting_deadline","working_days","ecomPassport","getCustomer","$ecomConfig","get","promises","gtins","optInConfig","merchant_id","order_id","number","id","email","delivery_country","estimated_delivery_date","getFullYear","getMonth","toString","padStart","opt_in_style","items","i","length","push","store","url","product_id","then","data","gtin","forEach","gtinCode","includes","catch","console","error","Promise","allSettled","products","map","gapi","load","surveyoptin","render","currentRoute","afterEach","Error"],"mappings":"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","file":"chunk.5b1feaa9efbb826107f0.js","sourcesContent":["import { $ecomConfig } from '@ecomplus/utils'\nimport { store } from '@ecomplus/client'\nimport ecomPassport from '@ecomplus/passport-client'\n\nexport default (options = {}) => {\n  const { gmcMerchantId, dialogPosition } = options\n  if (gmcMerchantId) {\n    const router = window.storefrontApp && window.storefrontApp.router\n    if (router) {\n      const addConfirmationDialog = ({ name, params }) => {\n        if (name === 'confirmation' && params.json) {\n          const addDays = days => {\n            const date = new Date(Date.now())\n            date.setDate(date.getDate() + days)\n            return date\n          }\n\n          let order, customerEmail, deliveryCountry, deliveryDate\n          const orderJson = decodeURIComponent(params.json)\n          if (orderJson) {\n            try {\n              order = JSON.parse(orderJson)\n            } catch (e) {\n            }\n          }\n\n          if (order) {\n            const { buyers } = order\n            if (buyers && buyers[0]) {\n              customerEmail = buyers[0].main_email\n            }\n            const shippingLine = order.shipping_lines && order.shipping_lines[0]\n            if (shippingLine && shippingLine.delivery_time) {\n              let days = shippingLine.delivery_time.days\n              if (shippingLine.posting_deadline) {\n                days += shippingLine.delivery_time.days\n              }\n              if (shippingLine.delivery_time.working_days) {\n                days *= 1.25\n              }\n              deliveryDate = addDays(days + 3)\n            }\n          }\n\n          if (!customerEmail) {\n            customerEmail = ecomPassport.getCustomer().main_email\n          }\n          if (!deliveryCountry) {\n            deliveryCountry = $ecomConfig.get('country_code')\n          }\n          if (!deliveryDate) {\n            deliveryDate = addDays(14)\n          }\n\n          const promises = []\n          const gtins = []\n          const optInConfig = {\n            merchant_id: gmcMerchantId,\n            order_id: params.number || params.id,\n            email: customerEmail,\n            delivery_country: deliveryCountry,\n            estimated_delivery_date: deliveryDate.getFullYear() +\n              `-${(deliveryDate.getMonth() + 1).toString().padStart(2, '0')}-` +\n              deliveryDate.getDate().toString().padStart(2, '0'),\n            opt_in_style: dialogPosition || 'CENTER_DIALOG'\n          }\n\n          if (order && order.items) {\n            for (let i = 0; i < order.items.length && i <= 4; i++) {\n              promises.push(\n                store({ url: `/products/${order.items[i].product_id}.json` })\n                  .then(({ data }) => {\n                    if (data.gtin) {\n                      data.gtin.forEach(gtinCode => {\n                        if (!gtins.includes(gtinCode)) {\n                          gtins.push(gtinCode)\n                        }\n                      })\n                    }\n                  })\n                  .catch(console.error)\n              )\n            }\n          }\n\n          Promise.allSettled(promises).then(() => {\n            if (gtins.length) {\n              optInConfig.products = gtins.map(gtin => ({ gtin }))\n            }\n            window.gapi.load('surveyoptin', function () {\n              window.gapi.surveyoptin.render(optInConfig)\n            })\n          })\n        }\n      }\n\n      if (router.currentRoute) {\n        addConfirmationDialog(router.currentRoute)\n      }\n      router.afterEach(addConfirmationDialog)\n    }\n  } else {\n    console.error(new Error('Can\\'t show opt-in dialog without `gmcMerchantId` option'))\n  }\n}\n"],"sourceRoot":""}