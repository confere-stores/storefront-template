{"version":3,"sources":["webpack:///./template/js/lib/fetch-info.js"],"names":["window","_info","fetchInfoPromises","modulesToFetch","endpoint","Object","keys","utm","length","push","reqOptions","method","data","forEach","modInfo","promise","Promise","resolve","modules","url","axiosConfig","timeout","then","result","Array","isArray","error","response","field","val","undefined","monthly_interest","max_number","value","payment_gateways","discount","apply_at","emitter","emit","catch","err","console","finally","all"],"mappings":"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","file":"chunk.7670c8ca31238f2a20d4.js","sourcesContent":["import { modules } from '@ecomplus/client'\nimport emitter from './emitter'\nimport utm from './persist-utm'\n\nwindow._info = window._info || {}\nconst fetchInfoPromises = []\nconst modulesToFetch = [\n  { endpoint: 'list_payments' },\n  { endpoint: 'calculate_shipping' }\n]\nif (Object.keys(utm).length) {\n  modulesToFetch.push({\n    endpoint: 'apply_discount',\n    reqOptions: {\n      method: 'post',\n      data: { utm }\n    }\n  })\n}\n\nmodulesToFetch.forEach(({ endpoint, reqOptions }) => {\n  const modInfo = {}\n  window._info[endpoint] = modInfo\n\n  const promise = new Promise(resolve => {\n    modules({\n      url: `/${endpoint}.json`,\n      ...reqOptions,\n      axiosConfig: {\n        timeout: 10000\n      }\n    })\n\n      .then(({ data }) => {\n        const { result } = data\n        if (Array.isArray(result)) {\n          result.forEach(({ error, response }) => {\n            if (!error) {\n              let field, val\n\n              switch (endpoint) {\n                case 'calculate_shipping':\n                  field = 'free_shipping_from_value'\n                  val = response[field]\n                  if (typeof val === 'number' && (modInfo[field] === undefined || val < modInfo[field])) {\n                    modInfo[field] = val\n                  }\n                  break\n\n                case 'list_payments':\n                  field = 'installments_option'\n                  val = response[field]\n                  if (val && (!modInfo[field] ||\n                    val.monthly_interest < modInfo[field].monthly_interest ||\n                    val.max_number > modInfo[field].max_number)) {\n                    modInfo[field] = val\n                  }\n                  field = 'discount_option'\n                  val = response[field]\n                  if (val && (!modInfo[field] || val.value > modInfo[field].value)) {\n                    response.payment_gateways.forEach(({ discount }) => {\n                      if (discount && discount.apply_at !== 'freight' && discount.value === val.value) {\n                        modInfo[field] = {\n                          apply_at: discount.apply_at,\n                          ...val\n                        }\n                      }\n                    })\n                  }\n                  field = 'loyalty_points_programs'\n                  val = response[field]\n                  if (val) {\n                    modInfo[field] = { ...modInfo[field], ...val }\n                  }\n                  break\n\n                default:\n                  field = 'available_extra_discount'\n                  val = response[field]\n                  if (val && (!modInfo[field] || val.value > modInfo[field].value)) {\n                    modInfo[field] = val\n                  }\n              }\n            }\n          })\n        }\n        emitter.emit(`info:${endpoint}`, modInfo)\n      })\n\n      .catch(err => {\n        console.error(err)\n        emitter.emit(`info:${endpoint}`, err)\n      })\n\n      .finally(resolve)\n  })\n\n  fetchInfoPromises.push(promise)\n})\n\nPromise.all(fetchInfoPromises)\n  .then(() => emitter.emit('info', window._info))\n"],"sourceRoot":""}