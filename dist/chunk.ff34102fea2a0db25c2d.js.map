{"version":3,"sources":["webpack:///./node_modules/@ecomplus/widget-tag-manager/src/index.js","webpack:///./node_modules/@ecomplus/widget-tag-manager/src/lib/parse-context.js","webpack:///./node_modules/@ecomplus/widget-tag-manager/src/lib/parse-dom.js","webpack:///./node_modules/@ecomplus/widget-tag-manager/src/lib/common.js","webpack:///./node_modules/@ecomplus/widget-tag-manager/src/lib/watch-app-routes.js","webpack:///./node_modules/@ecomplus/widget-tag-manager/src/lib/watch-shopping-cart.js"],"names":["options","dataLayerVar","parseDomMsDelay","dataLayer","window","context","storefront","resource","body","productData","getProductData","data","event","ecommerce","currencyCode","detail","products","categories","categoriesList","length","category","category_tree","replace","actionField","list","brands","brand","name","push","parseContext","watchAppRoutes","watchShoppingCart","setTimeout","$products","document","querySelectorAll","skus","listNameBySku","isSearchPage","location","pathname","defaultList","i","$product","sku","dataset","indexOf","closest","$carousel","title","impressions","map","listName","item","id","parseDom","$ecomConfig","get","price","toFixed","quantity","router","storefrontApp","isCartSent","isCheckoutSent","isPurchaseSent","getCartProductsList","ecomCart","Array","isArray","items","forEach","emitCheckoutOption","checkout_option","emitCheckout","step","option","checkout","emitPurchase","orderId","orderJson","amount","revenue","total","subtotal","order","undefined","freight","shipping","tax","JSON","parse","e","field","extra_discount","discount_coupon","coupon","purchase","emitPurchaseTimer","addRouteToData","params","clearTimeout","json","decodeURIComponent","currentRoute","afterEach","productsBySku","emitAddToCart","add","emitRemoveFromCart","remove","Object","assign","on"],"mappings":"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","file":"chunk.ff34102fea2a0db25c2d.js","sourcesContent":["import parseContext from './lib/parse-context'\nimport parseDom from './lib/parse-dom'\nimport watchAppRoutes from './lib/watch-app-routes'\nimport watchShoppingCart from './lib/watch-shopping-cart'\n\nexport default (options = {}) => {\n  const { dataLayerVar, parseDomMsDelay } = options\n  const dataLayer = window[dataLayerVar] || window.dataLayer\n\n  if (dataLayer) {\n    parseContext(dataLayer)\n    watchAppRoutes(dataLayer)\n    watchShoppingCart(dataLayer)\n\n    setTimeout(() => {\n      parseDom(dataLayer)\n    }, parseDomMsDelay >= 0 ? parseDomMsDelay : 300)\n  }\n}\n","import { categoriesList } from '@ecomplus/utils'\nimport { currencyCode, getProductData } from './common'\n\nexport default dataLayer => {\n  const context = window.storefront && window.storefront.context\n  if (context && context.resource === 'products') {\n    const { body } = context\n\n    const productData = getProductData(body)\n    const data = {\n      event: 'eec.detail',\n      ecommerce: {\n        currencyCode,\n        detail: {\n          products: [productData]\n        }\n      }\n    }\n\n    const categories = categoriesList(body)\n    if (categories.length) {\n      productData.category = body.category_tree\n        ? body.category_tree.replace(/\\s>\\s/g, '/') : categories[0]\n      data.ecommerce.detail.actionField = {\n        list: categories[0]\n      }\n    }\n    if (body.brands && body.brands.length) {\n      productData.brand = body.brands[0].name\n    }\n\n    dataLayer.push(data)\n  }\n}\n","import { currencyCode } from './common'\n\nexport default dataLayer => {\n  const $products = document.querySelectorAll('[data-sku]')\n  if ($products.length) {\n    const skus = []\n    const listNameBySku = {}\n    const isSearchPage = window.location.pathname === '/search'\n\n    let defaultList\n    if (isSearchPage) {\n      defaultList = 'Search results'\n    } else {\n      const context = window.storefront && window.storefront.context\n      if (context && context.body) {\n        const { name } = context.body\n        switch (context.resource) {\n          case 'categories':\n            defaultList = `Category: ${name}`\n            break\n          case 'brands':\n            defaultList = `Brand: ${name}`\n            break\n          case 'collections':\n            defaultList = `Collection: ${name}`\n        }\n      }\n    }\n\n    for (let i = 0; i < $products.length; i++) {\n      const $product = $products[i]\n      const { sku } = $product.dataset\n      if (skus.indexOf(sku) === -1) {\n        skus.push(sku)\n\n        if ($product.closest) {\n          const $carousel = $product.closest('.products-carousel')\n          if (!isSearchPage && $carousel) {\n            listNameBySku[sku] = $carousel.dataset.title\n          }\n        }\n      }\n    }\n\n    dataLayer.push({\n      event: 'eec.impressions',\n      ecommerce: {\n        currencyCode,\n        impressions: skus.map(sku => {\n          const listName = listNameBySku[sku] || defaultList\n          const item = { id: sku }\n          if (listName) {\n            item.list = listName\n          }\n          return item\n        })\n      }\n    })\n  }\n}\n","import { $ecomConfig, name, price } from '@ecomplus/utils'\n\nexport const currencyCode = $ecomConfig.get('currency') || 'BRL'\n\nexport const getProductData = item => {\n  const productData = {\n    name: name(item),\n    id: item.sku,\n    price: price(item).toFixed(2)\n  }\n  if (item.quantity) {\n    productData.quantity = item.quantity\n  }\n  return productData\n}\n","import ecomCart from '@ecomplus/shopping-cart'\nimport { currencyCode, getProductData } from './common'\n\nexport default dataLayer => {\n  const router = window.storefrontApp && window.storefrontApp.router\n  if (router) {\n    let isCartSent, isCheckoutSent, isPurchaseSent\n    const getCartProductsList = () => {\n      const products = []\n      if (ecomCart.data && Array.isArray(ecomCart.data.items)) {\n        ecomCart.data.items.forEach(item => {\n          products.push(getProductData(item))\n        })\n      }\n      return products\n    }\n\n    const emitCheckoutOption = actionField => {\n      dataLayer.push({\n        event: 'eec.checkout_option',\n        ecommerce: {\n          currencyCode,\n          checkout_option: { actionField }\n        }\n      })\n    }\n\n    const emitCheckout = (step, option) => {\n      const actionField = { step, option }\n      if (step <= 1 || !isCartSent) {\n        dataLayer.push({\n          event: 'eec.checkout',\n          ecommerce: {\n            currencyCode,\n            checkout: {\n              actionField,\n              products: getCartProductsList()\n            }\n          }\n        })\n        dataLayer.push({ event: 'checkout' })\n        isCartSent = true\n      } else if (!isCheckoutSent) {\n        emitCheckoutOption(actionField)\n        dataLayer.push({ event: 'checkoutOption' })\n        isCheckoutSent = true\n      }\n    }\n\n    const emitPurchase = (orderId, orderJson) => {\n      if (!isPurchaseSent) {\n        const { amount } = window.storefrontApp\n        const actionField = {\n          id: orderId,\n          revenue: (\n            (amount && amount.total) ||\n            (ecomCart.data && ecomCart.data.subtotal) ||\n            0\n          ).toFixed(2)\n        }\n        if (amount) {\n          if (amount.freight !== undefined) {\n            actionField.shipping = amount.freight.toFixed(2)\n          }\n          if (amount.tax !== undefined) {\n            actionField.tax = amount.tax.toFixed(2)\n          }\n        }\n\n        let order\n        if (orderJson) {\n          try {\n            order = JSON.parse(orderJson)\n          } catch (e) {\n          }\n        }\n        if (order) {\n          ;['payment_method_label', 'shipping_method_label'].forEach((field, i) => {\n            if (order[field]) {\n              emitCheckoutOption({\n                step: 3 + i,\n                option: order[field]\n              })\n            }\n          })\n          if (order.extra_discount && order.extra_discount.discount_coupon) {\n            actionField.coupon = order.extra_discount.discount_coupon\n          }\n        }\n\n        dataLayer.push({\n          event: 'eec.purchase',\n          ecommerce: {\n            currencyCode,\n            purchase: {\n              actionField,\n              products: getCartProductsList()\n            }\n          }\n        })\n        isPurchaseSent = true\n      }\n    }\n\n    let emitPurchaseTimer\n    const addRouteToData = ({ name, params }) => {\n      switch (name) {\n        case 'cart':\n          emitCheckout(1, 'Review Cart')\n          break\n        case 'checkout':\n          emitCheckout(2, 'Confirm Purchase')\n          break\n        case 'confirmation':\n          clearTimeout(emitPurchaseTimer)\n          if (params.json) {\n            emitPurchase(params.id, decodeURIComponent(params.json))\n          } else {\n            emitPurchaseTimer = setTimeout(() => {\n              emitPurchase(params.id)\n            }, 1500)\n          }\n          break\n      }\n    }\n\n    if (router.currentRoute) {\n      addRouteToData(router.currentRoute)\n    }\n    router.afterEach(addRouteToData)\n  }\n}\n","import ecomCart from '@ecomplus/shopping-cart'\nimport { currencyCode, getProductData } from './common'\n\nexport default dataLayer => {\n  const productsBySku = {}\n\n  const emitAddToCart = item => {\n    const productData = getProductData(item)\n    dataLayer.push({\n      event: 'eec.add',\n      ecommerce: {\n        currencyCode,\n        add: {\n          products: [productData]\n        }\n      }\n    })\n    dataLayer.push({ event: 'addToCart' })\n    productsBySku[item.sku] = productData\n  }\n\n  const emitRemoveFromCart = item => {\n    const productData = productsBySku[item.sku]\n    dataLayer.push({\n      event: 'eec.remove',\n      ecommerce: {\n        currencyCode,\n        remove: {\n          products: [\n            (productData ? Object.assign({}, productData) : getProductData(item))\n          ]\n        }\n      }\n    })\n    dataLayer.push({ event: 'removeFromCart' })\n    delete productsBySku[item.sku]\n  }\n\n  ecomCart.on('addItem', ({ item }) => emitAddToCart(item))\n\n  ecomCart.on('increaseItemQnt', ({ item }) => {\n    const productData = productsBySku[item.sku]\n    if (!productData) {\n      emitAddToCart(item)\n    } else {\n      const quantity = item.quantity - productData.quantity\n      if (quantity > 0) {\n        emitAddToCart({ ...item, quantity })\n      } else {\n        emitRemoveFromCart({\n          ...item,\n          quantity: -quantity\n        })\n      }\n    }\n  })\n\n  ecomCart.on('removeItem', ({ item }) => emitRemoveFromCart(item))\n\n  ecomCart.on('clear', () => {\n    for (const sku in productsBySku) {\n      if (productsBySku[sku]) {\n        emitRemoveFromCart(productsBySku[sku])\n      }\n    }\n  })\n}\n"],"sourceRoot":""}